// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros 1. macros: 1. macros 1`] = `
"
import {useObserver} from '../src/macro'
import {useObservable, useComputed} from '../src';

export const MyComponent = (props) => {
  useObserver();
  const foo = useObservable({foo: 1});
  const bar = useComputed(() => foo.foo + 1);
  return null;
};

export const MyComponent2 = (props) => {
  // a comment
  useObserver();
  const foo = useObservable({foo: 1});
  return null;
};

export const MyComponent3 = (props) => {
  useObserver();
  return null;
};

export const MyComponent4 = (props) => {
  useObserver('baseComponentName');
  return null;
};

export const MyComponent5 = (props) => {
  useObserver('baseComponentName', { useForceUpdate: true });
  return null;
};

      ↓ ↓ ↓ ↓ ↓ ↓

import { useObserver } from \\"mobx-react-lite\\";
import { useObservable, useComputed } from '../src';
export const MyComponent = props => {
  return useObserver(function useObserverRenderHook() {
    const foo = useObservable({
      foo: 1
    });
    const bar = useComputed(() => foo.foo + 1);
    return null;
  });
};
export const MyComponent2 = props => {
  // a comment
  return useObserver(function useObserverRenderHook() {
    const foo = useObservable({
      foo: 1
    });
    return null;
  });
};
export const MyComponent3 = props => {
  return useObserver(function useObserverRenderHook() {
    return null;
  });
};
export const MyComponent4 = props => {
  return useObserver(function useObserverRenderHook() {
    return null;
  }, 'baseComponentName');
};
export const MyComponent5 = props => {
  return useObserver(function useObserverRenderHook() {
    return null;
  }, 'baseComponentName', {
    useForceUpdate: true
  });
};
"
`;
